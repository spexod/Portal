map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# block common exploits
map $request_uri $is_blocked_common_exploits_path {
    "~*//"                                                      1;
    "~*(boot.ini|etc/passwd|self/environ)"                      1;
    "~*(%2e%2e|%252e%252e|%u002e|%c0%2e)"                       1;
    "~*(\.\./\.\./|\.\.\.|%252e%252e%252e)"                     1;
    "~*(~|`|<|>|:|;|{|}|\[|\]|\(|\))"                           1;
    default 0;
}

# limit the number of requests per IP to a rate
limit_req_zone $binary_remote_addr zone=ip:10m rate=10r/s;

server {
    listen 8080;
    server_name spexodisks.com www.spexodisks.com;
    return 301 https://spexodisks.com$request_uri;
}

server {
    listen 8443 ssl;
    http2 on;
    # only allow connections from the domain
    server_name spexodisks.com www.spexodisks.com;
    # For HTTPS connections, we need to use the SSL certificates
    ssl_certificate /etc/letsencrypt/live/spexodisks.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/spexodisks.com/privkey.pem;
    # allow redirects to be relative, without a defined server_name
    absolute_redirect off;
    # this is the internal Docker DNS, cache only for 30s
    resolver 127.0.0.11 valid=30s;

    # limit the number of requests from a specific IP addresses https://blog.nginx.org/blog/rate-limiting-nginx
    limit_req zone=ip burst=60 delay=40;

    # block files that are not needed
    location ~\.(env|git|7z|asp|aspx|bak|bz|bz2|cer|cgi|conf|crt|gz|ini|jsp|key|log|pem|php|php7|rar|sh|sql|tar|txt)$ {
        deny all;
        return 404;
        break;
    }

   # the Django-API site
    location /api/ {
        set $backendService backend:8000;
        proxy_pass http://$backendService;
        proxy_http_version 1.1;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_max_temp_file_size 1024m;
        proxy_request_buffering on;
    }
    # the Django-API wants a trailing slash, so we use redirect
    location = /api {
        rewrite ^ /api/ permanent;
    }
     # Static files for the django-api Site
     location ^~ /api/static/ {
        # Deny access, unless it is GET (HEAD is included with GET)
        limit_except GET {
            deny all;
        }
         alias /django/static_root/;
     }

    # a challenge address for certbot (SSL certificates)
    location ^~ /.well-known {
        # Deny access, unless it is GET (HEAD is included with GET)
        limit_except GET {
            deny all;
        }
        root /var/www/certbot/;
    }

    # The NEXT.js (React) frontend website
    location / {
        # Deny access, unless it is GET (HEAD is included with GET)
        limit_except GET {
            deny all;
        }
        set $frontendService frontend:3000;
        proxy_pass http://$frontendService;
        root /app;
        proxy_http_version 1.1;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_max_temp_file_size 1024m;
        proxy_request_buffering on;
    }
}