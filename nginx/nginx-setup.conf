map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
server{
 listen 8080;
 server_name spexodisks.com www.spexodisks.com;
 return 301 https://spexodisks.com$request_uri;
}

server{
 listen 8443 ssl http2;
 server_name spexodisks.com;
ssl_certificate /etc/letsencrypt/live/spexodisks.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/spexodisks.com/privkey.pem;

location /api {
  proxy_pass http://backend:8000;
 proxy_http_version 1.1;
# proxy_ssl_trusted_certificate /etc/ssl/cert.pem;
# proxy_ssl_verify on;
proxy_set_header   Host $http_host;
proxy_set_header   X-Real-IP $remote_addr;
proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header   X-Forwarded-Proto $scheme;
proxy_set_header   Upgrade $http_upgrade;
proxy_set_header   Connection $connection_upgrade;
proxy_max_temp_file_size 0;
proxy_request_buffering off;
 }
 #location /static {
 # proxy_pass http://backend:8000;
 # proxy_http_version 1.1;
# proxy_ssl_trusted_certificate /etc/ssl/cert.pem;
# proxy_ssl_verify on;
 #proxy_set_header   Host $http_host;
 #proxy_set_header   X-Real-IP $remote_addr;
 #proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
 #proxy_set_header   X-Forwarded-Proto $scheme;
 #proxy_set_header   Upgrade $http_upgrade;
 #proxy_set_header   Connection $connection_upgrade;
 #proxy_max_temp_file_size 0;
 #proxy_request_buffering off;
 # }

location /.well-known {
root /var/www/react/;
}


 location / {
  proxy_pass http://frontend;
  root /var/www/react;
  proxy_http_version 1.1;
#  proxy_ssl_trusted_certificate /etc/ssl/cert.pem;
# proxy_ssl_verify on;
proxy_set_header   Host $http_host;
proxy_set_header   X-Real-IP $remote_addr;
proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header   X-Forwarded-Proto $scheme;
proxy_set_header   Upgrade $http_upgrade;
proxy_set_header   Connection $connection_upgrade;
proxy_max_temp_file_size 0;
proxy_request_buffering off;
 }

}
