map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# limit the number of requests per IP to a rate (10 requests per second), a binary ip:10m zone holds 160,000 addresses
# limit_req_zone $binary_remote_addr zone=ip:10m rate=10r/s;

server {
    listen 8080;
    server_name _;
    # allow redirects to be relative, without a defined server_name
    absolute_redirect off;
    # this is the internal Docker DNS, cache only for 30s
    resolver 127.0.0.11 valid=30s;

    # limit the number of requests from a specific IP addresses
    # delay is the number of requests to process without delay (40)
    # 20 = 60 - 40 = burst - delay = are the number of request that are delayed to rate limit
    # with more then 60 requests in  burst, the request is requected.
    # limit_req zone=ip burst=60 delay=40;

   # the Django-API site
    location /api/ {
        set $backendService backend:8000;
        proxy_pass http://$backendService;
        proxy_http_version 1.1;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_max_temp_file_size 0;
        proxy_request_buffering off;
    }

    # the Django-API wants a trailing slash, so we use redirect
    location = /api {
       rewrite ^ /api/ permanent;
    }
    # Static files for the django-api Site
    location ^~ /api/static/ {
        alias /django/static_root/;
        # download
        autoindex on;               # enable directory listing output
        autoindex_exact_size off;   # output file sizes rounded to kilobytes, megabytes, and gigabytes
        autoindex_localtime on;     # output local times in the directory
    }

    # a challenge address for certbot (SSL certificates)
    location ^~ /.well-known {
        root /var/www/certbot/;
    }

    # The NEXT.js (React) frontend website
    location / {
        set $frontendService frontend:3000;
        proxy_pass http://$frontendService;
        root /app;
        proxy_http_version 1.1;
        proxy_set_header   Host $http_host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection $connection_upgrade;
        proxy_max_temp_file_size 0;
        proxy_request_buffering off;
    }
}
